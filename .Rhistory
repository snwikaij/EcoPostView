for(j in 1:nt){
bf_mu[j]     ~ dcat(c(0.5, 0.5))
bf_time[j]   ~ dcat(c(0.5, 0.5))
#bf_level[j]  ~ dcat(c(0.5, 0.5))
mu_M0[j]  ~ dnorm(0, 1/0.089^2)
mu_M1[j]  ~ dnorm(0, 1/0.91^2)
mu[j]     <- equals(bf_mu[j], 1)*mu_M0[j] + equals(bf_mu[j], 2)*mu_M1[j]
time_M0[j]  ~ dnorm(0, 1/0.003^2)
time_M1[j]  ~ dnorm(0, 1/0.91^2)
b_time[j]   <- equals(bf_time[j], 1)*time_M0[j] + equals(bf_time[j], 2)*time_M1[j]
#level_M0[j]  ~ dnorm(0, 1/0.003^2)
#level_M1[j]  ~ dnorm(0, 1/0.91^2)
#b_level[j]   <- equals(bf_level[j], 1)*level_M0[j] + equals(bf_level[j], 2)*level_M1[j]
u[j]    ~ dnorm(0, 1/5^2)
}
}
mod <- R2jags::jags.parallel(data = mod_data,
model.file = meta_cor,
parameters.to.save =  c("mu", "bf_mu", "bf_time", "b_time", "u"),
n.chains = 8,
n.thin = 20,
jags.seed = 666,
n.iter = 10500,
n.burnin = 500)
maxpost              <- function(x){d <- density(x); d$x[which.max(d$y)]}
bf_list <- apply(mod$BUGSoutput$sims.list$bf_mu, 2, table)
posterior     <- gather(as.data.frame(mod$BUGSoutput$sims.list$mu))
posterior$key <- plyr::mapvalues(posterior$key, unique(posterior$key), levels(mod_data$treatment))
effdf$ll <- as.numeric(effdf$d)-as.numeric(effdf$se)
effdf$ul <- as.numeric(effdf$d)+as.numeric(effdf$se)
post_sum <- cbind(aggregate(data=posterior, value~key, mean),
se=aggregate(data=posterior, value~key,sd)[,2],
ll=aggregate(data=posterior, value~key, function(x) quantile(x, .025))[,2],
ul=aggregate(data=posterior, value~key, function(x) quantile(x, .975))[,2])
post_sum$days <- NA
post_sum$level <- NA
post_sum$study <- "Posterior"
colnames(post_sum)[1:2] <- c("treatment", "d")
post_sum <- post_sum[,c("d", "se", "treatment", "days", "level", "study", "ll", "ul")]
eff_sum           <- rbind(effdf, post_sum)
eff_sum$colour    <- as.factor(ifelse(eff_sum$study=="Posterior",1,0))
eff_sum$study     <- ifelse(eff_sum$study %in% "Posterior", c(paste0(eff_sum$study, " mu=", round(as.numeric(eff_sum$d),2)," (se=", round(as.numeric(eff_sum$se), 2), ")")),  eff_sum$study)
eff_sum$study     <- as.factor(ifelse(eff_sum$colour==1, paste0(eff_sum$study, " BF10=", round(log(bf_list[2, ] / bf_list[1, ]),2)),eff_sum$study))
eff_sum$treatment <- as.factor(eff_sum$treatment)
ggplot(eff_sum, aes(as.numeric(d), study, col=colour))+
scale_color_manual(breaks = c(0, 1),
values = c("grey", "grey20"))+
geom_point()+geom_vline(xintercept = 0, lty=2, lwd=0.6, col="tomato3")+
geom_errorbarh(data=eff_sum, aes(xmin=ll, xmax=ul), height=0)+
theme_classic()+xlab("Cohen's d")+
theme(axis.title.y = element_blank(),
legend.position = "none")+
facet_wrap(.~treatment, scales="free_y")
effdf <- rbind.data.frame(
c(eff_sz(tabres)[4,], 'herbicide', 30, 370, "Magbanua et al. (2013)"),
c(eff_sz(tabres2)[4,], 'sediment', 30, 100, "Magbanua et al. (2013)"),
c(eff_sz(tabres3)[16,], 'herbicide+sediment', 30, 1, "Magbanua et al. (2013)"),
c(eff_sz(tabres4)[2,], 'sediment', 21, 72.4, "Beerman et al. (2014)"),
c(eff_sz(tabres5)[2,], 'flow', 21, 6.9, "Beerman et al. (2014)"),
c(eff_sz(tabres6)[2,], 'chloride', 21, 294, "Beerman et al. (2014)"),
c(eff_sz(tabres7)[4,], 'chloride+flow', 21, 1, "Beerman et al. (2014)"),
c(eff_sz(tabres8)[2,], 'sediment', 28, 15,  "Blocher et al. (2015)"),
c(eff_sz(tabres8)[9,], 'flow', 28, 26.5, "Blocher et al. (2015)"),
c(eff_sz(tabres8)[12,], 'sediment+flow', 28, 1, "Blocher et al. (2015)"),
c(eff_sz(tabres9)[2,], 'flow', 30, 1.3, "Elbrecht et al. (2013)"),
c(eff_sz(tabres9)[3,], 'sediment', 30, 67, "Elbrecht et al. (2013)"),
c(eff_sz(tabres9)[8,], 'sediment+flow', 30, 1, "Elbrecht et al. (2013)"),
c(eff_sz(tabres10)[2,], 'sediment', 24, 80,  "Almeida et al. (2025)"),
c(eff_sz(tabres10)[5,], 'flow', 24, 1.5, "Almeida et al. (2025)"),
c(eff_sz(tabres10)[20,], 'sediment+nitrate', 24, 1, "Almeida et al. (2025)"),
c(eff_sz(tabres10)[23,], 'flow+nitrate', 24, 1, "Almeida et al. (2025)"))
colnames(effdf) <- c("d", "se", "treatment", "days", "level", "study")
effdf
effdf <- rbind.data.frame(
c(eff_sz(tabres)[4,], 'herbicide', 30, 370, "Magbanua et al. (2013)"),
c(eff_sz(tabres2)[4,], 'sediment', 30, 100, "Magbanua et al. (2013)"),
c(eff_sz(tabres3)[16,], 'herbicide+sediment', 30, 1, "Magbanua et al. (2013)"),
c(eff_sz(tabres4)[2,], 'sediment', 21, 72.4, "Beerman et al. (2014)"),
c(eff_sz(tabres5)[2,], 'flow', 21, 6.9, "Beerman et al. (2014)"),
c(eff_sz(tabres6)[2,], 'chloride', 21, 294, "Beerman et al. (2014)"),
c(eff_sz(tabres7)[4,], 'chloride+flow', 21, 1, "Beerman et al. (2014)"),
c(eff_sz(tabres8)[2,], 'sediment', 28, 15,  "Blocher et al. (2015)"),
c(eff_sz(tabres8)[9,], 'flow', 28, 26.5, "Blocher et al. (2015)"),
c(eff_sz(tabres8)[12,], 'sediment+flow', 28, 1, "Blocher et al. (2015)"),
c(eff_sz(tabres9)[2,], 'flow', 30, 1.3, "Elbrecht et al. (2013)"),
c(eff_sz(tabres9)[3,], 'sediment', 30, 67, "Elbrecht et al. (2013)"),
c(eff_sz(tabres9)[8,], 'sediment+flow', 30, 1, "Elbrecht et al. (2013)"),
c(eff_sz(tabres10)[2,], 'sediment', 24, 80,  "Almeida et al. (2025)"),
c(eff_sz(tabres10)[5,], 'flow', 24, 1.5, "Almeida et al. (2025)"),
c(eff_sz(tabres10)[20,], 'sediment+nitrate', 24, 1, "Almeida et al. (2025)"),
c(eff_sz(tabres10)[23,], 'flow+nitrate', 24, 1, "Almeida et al. (2025)"))
colnames(effdf) <- c("d", "se", "treatment", "days", "level", "study")
effdf
library(R2jags)
mod_data <- list(
ni = nrow(effdf),
est = as.numeric(effdf$d),
se = as.numeric(effdf$se),
time = as.numeric(effdf$days),
treatment = as.factor(effdf$treatment),
level = as.numeric(effdf$level),
nt = length(unique(effdf$treatment)))
meta_cor <- function(){
for(i in 1:ni){
est[i]  ~ dnorm(mu1[i], tau1[i])
mu1[i]  <- mu[treatment[i]] + u[treatment[i]] + b_time[treatment[i]] * time[i] #+ b_level[treatment[i]] * level[i]
tau1[i] <- 1/(se[i]^2)
}
for(j in 1:nt){
bf_mu[j]     ~ dcat(c(0.5, 0.5))
bf_time[j]   ~ dcat(c(0.5, 0.5))
#bf_level[j]  ~ dcat(c(0.5, 0.5))
mu_M0[j]  ~ dnorm(0, 1/0.089^2)
mu_M1[j]  ~ dnorm(0, 1/0.91^2)
mu[j]     <- equals(bf_mu[j], 1)*mu_M0[j] + equals(bf_mu[j], 2)*mu_M1[j]
time_M0[j]  ~ dnorm(0, 1/0.003^2)
time_M1[j]  ~ dnorm(0, 1/0.91^2)
b_time[j]   <- equals(bf_time[j], 1)*time_M0[j] + equals(bf_time[j], 2)*time_M1[j]
#level_M0[j]  ~ dnorm(0, 1/0.003^2)
#level_M1[j]  ~ dnorm(0, 1/0.91^2)
#b_level[j]   <- equals(bf_level[j], 1)*level_M0[j] + equals(bf_level[j], 2)*level_M1[j]
u[j]    ~ dnorm(0, 1/5^2)
}
}
mod <- R2jags::jags.parallel(data = mod_data,
model.file = meta_cor,
parameters.to.save =  c("mu", "bf_mu", "bf_time", "b_time", "u"),
n.chains = 8,
n.thin = 20,
jags.seed = 666,
n.iter = 10500,
n.burnin = 500)
maxpost              <- function(x){d <- density(x); d$x[which.max(d$y)]}
bf_list <- apply(mod$BUGSoutput$sims.list$bf_mu, 2, table)
posterior     <- gather(as.data.frame(mod$BUGSoutput$sims.list$mu))
posterior$key <- plyr::mapvalues(posterior$key, unique(posterior$key), levels(mod_data$treatment))
effdf$ll <- as.numeric(effdf$d)-as.numeric(effdf$se)
effdf$ul <- as.numeric(effdf$d)+as.numeric(effdf$se)
post_sum <- cbind(aggregate(data=posterior, value~key, mean),
se=aggregate(data=posterior, value~key,sd)[,2],
ll=aggregate(data=posterior, value~key, function(x) quantile(x, .025))[,2],
ul=aggregate(data=posterior, value~key, function(x) quantile(x, .975))[,2])
post_sum$days <- NA
post_sum$level <- NA
post_sum$study <- "Posterior"
colnames(post_sum)[1:2] <- c("treatment", "d")
post_sum <- post_sum[,c("d", "se", "treatment", "days", "level", "study", "ll", "ul")]
eff_sum           <- rbind(effdf, post_sum)
eff_sum$colour    <- as.factor(ifelse(eff_sum$study=="Posterior",1,0))
eff_sum$study     <- ifelse(eff_sum$study %in% "Posterior", c(paste0(eff_sum$study, " mu=", round(as.numeric(eff_sum$d),2)," (se=", round(as.numeric(eff_sum$se), 2), ")")),  eff_sum$study)
eff_sum$study     <- as.factor(ifelse(eff_sum$colour==1, paste0(eff_sum$study, " BF10=", round(log(bf_list[2, ] / bf_list[1, ]),2)),eff_sum$study))
eff_sum$treatment <- as.factor(eff_sum$treatment)
ggplot(eff_sum, aes(as.numeric(d), study, col=colour))+
scale_color_manual(breaks = c(0, 1),
values = c("grey", "grey20"))+
geom_point()+geom_vline(xintercept = 0, lty=2, lwd=0.6, col="tomato3")+
geom_errorbarh(data=eff_sum, aes(xmin=ll, xmax=ul), height=0)+
theme_classic()+xlab("Cohen's d")+
theme(axis.title.y = element_blank(),
legend.position = "none")+
facet_wrap(.~treatment, scales="free_y")
time_df <- eff_sum[eff_sum$colour != 1,]
constant_time <- maxpost(mod$BUGSoutput$sims.list$mu)
x_time        <- seq(min(time_df$days), max(time_df$days), length.out=100)
line_df_time  <- data.frame(x=x_time, y=maxpost(abs(mod$BUGSoutput$sims.list$b_time))*x_time+abs(constant_time))
text_time <- paste0("mu=", round(as.numeric(maxpost(abs(mod$BUGSoutput$sims.list$b_time))),3)," (se=", round(sd(abs(mod$BUGSoutput$sims.list$b_time)), 3), ")")
ggplot(time_df, aes(as.numeric(days), abs(as.numeric(d)), col=study))+
geom_line(data=line_df_time, aes(x=x, y=y), inherit.aes = F)+
geom_point()+annotate("text", x=25, y=0, label=text_time)+
theme_classic()+xlab("Day's [time]")+ylab("Cohen's d")
ggplot(time_df, aes(as.numeric(days), abs(as.numeric(d)), col=study))+
#geom_line(data=line_df_time, aes(x=x, y=y), inherit.aes = F)+
geom_point()+annotate("text", x=25, y=0, label=text_time)+
theme_classic()+xlab("Day's [time]")+ylab("Cohen's d")
ggplot(eff_sum, aes(as.numeric(d), study, col=colour))+
scale_color_manual(breaks = c(0, 1),
values = c("grey", "grey20"))+
geom_point()+geom_vline(xintercept = 0, lty=2, lwd=0.6, col="tomato3")+
geom_errorbarh(data=eff_sum, aes(xmin=ll, xmax=ul), height=0)+
theme_classic()+xlab("Cohen's d")+
theme(axis.title.y = element_blank(),
legend.position = "none")+
facet_wrap(.~treatment, scales="free_y")
meta_cor <- function(){
for(i in 1:ni){
est[i]  ~ dnorm(mu1[i], tau1[i])
mu1[i]  <- mu[treatment[i]] + u[treatment[i]] + b_time[treatment[i]] * time[i] #+ b_level[treatment[i]] * level[i]
tau1[i] <- 1/(se[i]^2)
}
for(j in 1:nt){
#bf_mu[j]     ~ dcat(c(0.5, 0.5))
#bf_time[j]   ~ dcat(c(0.5, 0.5))
#bf_level[j]  ~ dcat(c(0.5, 0.5))
#mu_M0[j]  ~ dnorm(0, 1/0.089^2)
mu_M1[j]  ~ dnorm(0, 1/0.91^2)
mu[j]     <- mu_M1[j]  #equals(bf_mu[j], 1)*mu_M0[j] + equals(bf_mu[j], 2)*mu_M1[j]
time_M0[j]  ~ dnorm(0, 1/0.003^2)
time_M1[j]  ~ dnorm(0, 1/0.91^2)
b_time[j]   <- equals(bf_time[j], 1)*time_M0[j] + equals(bf_time[j], 2)*time_M1[j]
#level_M0[j]  ~ dnorm(0, 1/0.003^2)
#level_M1[j]  ~ dnorm(0, 1/0.91^2)
#b_level[j]   <- equals(bf_level[j], 1)*level_M0[j] + equals(bf_level[j], 2)*level_M1[j]
u[j]    ~ dnorm(0, 1/5^2)
}
}
mod <- R2jags::jags.parallel(data = mod_data,
model.file = meta_cor,
parameters.to.save =  c("mu", "bf_mu", "bf_time", "b_time", "u"),
n.chains = 8,
n.thin = 20,
jags.seed = 666,
n.iter = 10500,
n.burnin = 500)
meta_cor <- function(){
for(i in 1:ni){
est[i]  ~ dnorm(mu1[i], tau1[i])
mu1[i]  <- mu[treatment[i]] + u[treatment[i]] + b_time[treatment[i]] * time[i] #+ b_level[treatment[i]] * level[i]
tau1[i] <- 1/(se[i]^2)
}
for(j in 1:nt){
#bf_mu[j]     ~ dcat(c(0.5, 0.5))
bf_time[j]   ~ dcat(c(0.5, 0.5))
#bf_level[j]  ~ dcat(c(0.5, 0.5))
#mu_M0[j]  ~ dnorm(0, 1/0.089^2)
mu_M1[j]  ~ dnorm(0, 1/0.91^2)
mu[j]     <- mu_M1[j]  #equals(bf_mu[j], 1)*mu_M0[j] + equals(bf_mu[j], 2)*mu_M1[j]
time_M0[j]  ~ dnorm(0, 1/0.003^2)
time_M1[j]  ~ dnorm(0, 1/0.91^2)
b_time[j]   <- equals(bf_time[j], 1)*time_M0[j] + equals(bf_time[j], 2)*time_M1[j]
#level_M0[j]  ~ dnorm(0, 1/0.003^2)
#level_M1[j]  ~ dnorm(0, 1/0.91^2)
#b_level[j]   <- equals(bf_level[j], 1)*level_M0[j] + equals(bf_level[j], 2)*level_M1[j]
u[j]    ~ dnorm(0, 1/5^2)
}
}
mod <- R2jags::jags.parallel(data = mod_data,
model.file = meta_cor,
parameters.to.save =  c("mu", "bf_mu", "bf_time", "b_time", "u"),
n.chains = 8,
n.thin = 20,
jags.seed = 666,
n.iter = 10500,
n.burnin = 500)
maxpost              <- function(x){d <- density(x); d$x[which.max(d$y)]}
bf_list <- apply(mod$BUGSoutput$sims.list$bf_mu, 2, table)
posterior     <- gather(as.data.frame(mod$BUGSoutput$sims.list$mu))
posterior$key <- plyr::mapvalues(posterior$key, unique(posterior$key), levels(mod_data$treatment))
effdf$ll <- as.numeric(effdf$d)-as.numeric(effdf$se)
effdf$ul <- as.numeric(effdf$d)+as.numeric(effdf$se)
post_sum <- cbind(aggregate(data=posterior, value~key, mean),
se=aggregate(data=posterior, value~key,sd)[,2],
ll=aggregate(data=posterior, value~key, function(x) quantile(x, .025))[,2],
ul=aggregate(data=posterior, value~key, function(x) quantile(x, .975))[,2])
post_sum$days <- NA
post_sum$level <- NA
post_sum$study <- "Posterior"
colnames(post_sum)[1:2] <- c("treatment", "d")
post_sum <- post_sum[,c("d", "se", "treatment", "days", "level", "study", "ll", "ul")]
eff_sum           <- rbind(effdf, post_sum)
eff_sum$colour    <- as.factor(ifelse(eff_sum$study=="Posterior",1,0))
eff_sum$study     <- ifelse(eff_sum$study %in% "Posterior", c(paste0(eff_sum$study, " mu=", round(as.numeric(eff_sum$d),2)," (se=", round(as.numeric(eff_sum$se), 2), ")")),  eff_sum$study)
eff_sum$study     <- as.factor(ifelse(eff_sum$colour==1, paste0(eff_sum$study, " BF10=", round(log(bf_list[2, ] / bf_list[1, ]),2)),eff_sum$study))
eff_sum$treatment <- as.factor(eff_sum$treatment)
ggplot(eff_sum, aes(as.numeric(d), study, col=colour))+
scale_color_manual(breaks = c(0, 1),
values = c("grey", "grey20"))+
geom_point()+geom_vline(xintercept = 0, lty=2, lwd=0.6, col="tomato3")+
geom_errorbarh(data=eff_sum, aes(xmin=ll, xmax=ul), height=0)+
theme_classic()+xlab("Cohen's d")+
theme(axis.title.y = element_blank(),
legend.position = "none")+
facet_wrap(.~treatment, scales="free_y")
maxpost(mod$BUGSoutput$sims.list$mu)
library(R2jags)
mod_data <- list(
ni = nrow(effdf),
est = as.numeric(effdf$d),
se = as.numeric(effdf$se),
time = as.numeric(effdf$days),
treatment = as.factor(effdf$treatment),
level = as.numeric(effdf$level),
nt = length(unique(effdf$treatment)))
library(R2jags)
library(R2jags)
mod_data <- list(
ni = nrow(effdf),
est = as.numeric(effdf$d),
se = as.numeric(effdf$se),
time = as.numeric(effdf$days),
treatment = as.factor(effdf$treatment),
level = as.numeric(effdf$level),
nt = length(unique(effdf$treatment)))
meta_cor <- function(){
for(i in 1:ni){
est[i]  ~ dnorm(mu1[i], tau1[i])
mu1[i]  <- mu[treatment[i]] + u[treatment[i]] + b_time[treatment[i]] * time[i] + b_level[treatment[i]] * level[i]
tau1[i] <- 1/(se[i]^2)
}
for(j in 1:nt){
bf_mu[j]     ~ dcat(c(0.5, 0.5))
bf_time[j]   ~ dcat(c(0.5, 0.5))
#bf_level[j]  ~ dcat(c(0.5, 0.5))
mu_M0[j]  ~ dnorm(0, 1/0.089^2)
mu_M1[j]  ~ dnorm(0, 1/0.91^2)
mu[j]     <- equals(bf_mu[j], 1)*mu_M0[j] + equals(bf_mu[j], 2)*mu_M1[j]
time_M0[j]  ~ dnorm(0, 1/0.003^2)
time_M1[j]  ~ dnorm(0, 1/0.91^2)
b_time[j]   <- equals(bf_time[j], 1)*time_M0[j] + equals(bf_time[j], 2)*time_M1[j]
level_M0[j]  ~ dnorm(0, 1/0.003^2)
level_M1[j]  ~ dnorm(0, 1/0.91^2)
b_level[j]   <- equals(bf_level[j], 1)*level_M0[j] + equals(bf_level[j], 2)*level_M1[j]
u[j]    ~ dnorm(0, 1/5^2)
}
}
mod <- R2jags::jags.parallel(data = mod_data,
model.file = meta_cor,
parameters.to.save =  c("mu", "bf_mu", "bf_time", "b_time", "bf_time", "b_time", "u"),
n.chains = 8,
n.thin = 20,
jags.seed = 666,
n.iter = 10500,
n.burnin = 500)
maxpost              <- function(x){d <- density(x); d$x[which.max(d$y)]}
library(R2jags)
mod_data <- list(
ni = nrow(effdf),
est = as.numeric(effdf$d),
se = as.numeric(effdf$se),
time = as.numeric(effdf$days),
treatment = as.factor(effdf$treatment),
level = as.numeric(effdf$level),
nt = length(unique(effdf$treatment)))
meta_cor <- function(){
for(i in 1:ni){
est[i]  ~ dnorm(mu1[i], tau1[i])
mu1[i]  <- mu[treatment[i]] + u[treatment[i]] + b_time[treatment[i]] * time[i] + b_level[treatment[i]] * level[i]
tau1[i] <- 1/(se[i]^2)
}
for(j in 1:nt){
bf_mu[j]     ~ dcat(c(0.5, 0.5))
bf_time[j]   ~ dcat(c(0.5, 0.5))
bf_level[j]  ~ dcat(c(0.5, 0.5))
mu_M0[j]  ~ dnorm(0, 1/0.089^2)
mu_M1[j]  ~ dnorm(0, 1/0.91^2)
mu[j]     <- equals(bf_mu[j], 1)*mu_M0[j] + equals(bf_mu[j], 2)*mu_M1[j]
time_M0[j]  ~ dnorm(0, 1/0.003^2)
time_M1[j]  ~ dnorm(0, 1/0.91^2)
b_time[j]   <- equals(bf_time[j], 1)*time_M0[j] + equals(bf_time[j], 2)*time_M1[j]
level_M0[j]  ~ dnorm(0, 1/0.003^2)
level_M1[j]  ~ dnorm(0, 1/0.91^2)
b_level[j]   <- equals(bf_level[j], 1)*level_M0[j] + equals(bf_level[j], 2)*level_M1[j]
u[j]    ~ dnorm(0, 1/5^2)
}
}
mod <- R2jags::jags.parallel(data = mod_data,
model.file = meta_cor,
parameters.to.save =  c("mu", "bf_mu", "bf_time", "b_time", "bf_time", "b_time", "u"),
n.chains = 8,
n.thin = 20,
jags.seed = 666,
n.iter = 10500,
n.burnin = 500)
maxpost              <- function(x){d <- density(x); d$x[which.max(d$y)]}
bf_list <- apply(mod$BUGSoutput$sims.list$bf_mu, 2, table)
posterior     <- gather(as.data.frame(mod$BUGSoutput$sims.list$mu))
posterior$key <- plyr::mapvalues(posterior$key, unique(posterior$key), levels(mod_data$treatment))
effdf$ll <- as.numeric(effdf$d)-as.numeric(effdf$se)
effdf$ul <- as.numeric(effdf$d)+as.numeric(effdf$se)
post_sum <- cbind(aggregate(data=posterior, value~key, mean),
se=aggregate(data=posterior, value~key,sd)[,2],
ll=aggregate(data=posterior, value~key, function(x) quantile(x, .025))[,2],
ul=aggregate(data=posterior, value~key, function(x) quantile(x, .975))[,2])
post_sum$days <- NA
post_sum$level <- NA
post_sum$study <- "Posterior"
colnames(post_sum)[1:2] <- c("treatment", "d")
post_sum <- post_sum[,c("d", "se", "treatment", "days", "level", "study", "ll", "ul")]
eff_sum           <- rbind(effdf, post_sum)
eff_sum$colour    <- as.factor(ifelse(eff_sum$study=="Posterior",1,0))
eff_sum$study     <- ifelse(eff_sum$study %in% "Posterior", c(paste0(eff_sum$study, " mu=", round(as.numeric(eff_sum$d),2)," (se=", round(as.numeric(eff_sum$se), 2), ")")),  eff_sum$study)
eff_sum$study     <- as.factor(ifelse(eff_sum$colour==1, paste0(eff_sum$study, " BF10=", round(log(bf_list[2, ] / bf_list[1, ]),2)),eff_sum$study))
eff_sum$treatment <- as.factor(eff_sum$treatment)
ggplot(eff_sum, aes(as.numeric(d), study, col=colour))+
scale_color_manual(breaks = c(0, 1),
values = c("grey", "grey20"))+
geom_point()+geom_vline(xintercept = 0, lty=2, lwd=0.6, col="tomato3")+
geom_errorbarh(data=eff_sum, aes(xmin=ll, xmax=ul), height=0)+
theme_classic()+xlab("Cohen's d")+
theme(axis.title.y = element_blank(),
legend.position = "none")+
facet_wrap(.~treatment, scales="free_y")
time_df <- eff_sum[eff_sum$colour != 1,]
constant_time <- maxpost(mod$BUGSoutput$sims.list$mu)+ maxpost(mod$BUGSoutput$sims.list$mu)
x_time        <- seq(min(time_df$days), max(time_df$days), length.out=100)
line_df_time  <- data.frame(x=x_time, y=maxpost(abs(mod$BUGSoutput$sims.list$b_time))*x_time+abs(constant_time))
text_time <- paste0("mu=", round(as.numeric(maxpost(abs(mod$BUGSoutput$sims.list$b_time))),3)," (se=", round(sd(abs(mod$BUGSoutput$sims.list$b_time)), 3), ")")
ggplot(time_df, aes(as.numeric(days), abs(as.numeric(d)), col=study))+
geom_line(data=line_df_time, aes(x=x, y=y), inherit.aes = F)+
geom_point()+annotate("text", x=25, y=0, label=text_time)+
theme_classic()+xlab("Day's [time]")+ylab("Cohen's d")
ggplot(time_df, aes(log(as.numeric(days)), abs(as.numeric(d)), col=study))+
geom_line(data=line_df_time, aes(x=x, y=y), inherit.aes = F)+
geom_point()+annotate("text", x=25, y=0, label=text_time)+
theme_classic()+xlab("Day's [time]")+ylab("Cohen's d")
ggplot(time_df, aes(log(as.numeric(days)), abs(as.numeric(d)), col=study))+
#geom_line(data=line_df_time, aes(x=x, y=y), inherit.aes = F)+
#geom_point()+annotate("text", x=25, y=0, label=text_time)+
theme_classic()+xlab("Day's [time]")+ylab("Cohen's d")
ggplot(time_df, aes(as.numeric(days), abs(as.numeric(d)), col=study))+
#geom_line(data=line_df_time, aes(x=x, y=y), inherit.aes = F)+
#geom_point()+annotate("text", x=25, y=0, label=text_time)+
theme_classic()+xlab("Day's [time]")+ylab("Cohen's d")
constant_time <- maxpost(mod$BUGSoutput$sims.list$mu)+ maxpost(mod$BUGSoutput$sims.list$mu)
x_time        <- seq(min(time_df$days), max(time_df$days), length.out=100)
line_df_time  <- data.frame(x=x_time, y=maxpost(abs(mod$BUGSoutput$sims.list$b_time))*x_time+abs(constant_time))
text_time <- paste0("mu=", round(as.numeric(maxpost(abs(mod$BUGSoutput$sims.list$b_time))),3)," (se=", round(sd(abs(mod$BUGSoutput$sims.list$b_time)), 3), ")")
ggplot(time_df, aes(as.numeric(days), abs(as.numeric(d)), col=study))+
#geom_line(data=line_df_time, aes(x=x, y=y), inherit.aes = F)+
geom_point()+#annotate("text", x=25, y=0, label=text_time)+
theme_classic()+xlab("Day's [time]")+ylab("Cohen's d")
ggplot(time_df, aes(log(as.numeric(days)), abs(as.numeric(d)), col=study))+
#geom_line(data=line_df_time, aes(x=x, y=y), inherit.aes = F)+
geom_point()+#annotate("text", x=25, y=0, label=text_time)+
theme_classic()+xlab("Day's [time]")+ylab("Cohen's d")
ggplot(time_df, aes(as.numeric(days), abs(as.numeric(d)), col=study))+
geom_line(data=line_df_time, aes(x=x, y=y), inherit.aes = F)+
geom_point()+annotate("text", x=25, y=0, label=text_time)+
theme_classic()+xlab("Day's [time]")+ylab("Cohen's d")
constant_time <- maxpost(mod$BUGSoutput$sims.list$mu)+maxpost(mod$BUGSoutput$sims.list$b_time)*mean(mod_data$time)
x_time        <- seq(min(time_df$days), max(time_df$days), length.out=100)
line_df_time  <- data.frame(x=x_time, y=maxpost(abs(mod$BUGSoutput$sims.list$b_time))*x_time+abs(constant_time))
text_time <- paste0("mu=", round(as.numeric(maxpost(abs(mod$BUGSoutput$sims.list$b_time))),3)," (se=", round(sd(abs(mod$BUGSoutput$sims.list$b_time)), 3), ")")
ggplot(time_df, aes(as.numeric(days), abs(as.numeric(d)), col=study))+
geom_line(data=line_df_time, aes(x=x, y=y), inherit.aes = F)+
geom_point()+annotate("text", x=25, y=0, label=text_time)+
theme_classic()+xlab("Day's [time]")+ylab("Cohen's d")
ggplot(time_df, aes(as.numeric(days), abs(as.numeric(d)), col=study))+
#geom_line(data=line_df_time, aes(x=x, y=y), inherit.aes = F)+
geom_point()+annotate("text", x=25, y=0, label=text_time)+
theme_classic()+xlab("Day's [time]")+ylab("Cohen's d")
ggplot(time_df, aes(as.numeric(days), abs(as.numeric(d)), col=study))+
#geom_line(data=line_df_time, aes(x=x, y=y), inherit.aes = F)+
geom_point()+#annotate("text", x=25, y=0, label=text_time)+
theme_classic()+xlab("Day's [time]")+ylab("Cohen's d")
library(R2jags)
mod_data <- list(
ni = nrow(effdf),
est = as.numeric(effdf$d),
se = as.numeric(effdf$se),
time = as.numeric(effdf$days),
treatment = as.factor(effdf$treatment),
level = as.numeric(effdf$level),
nt = length(unique(effdf$treatment)))
meta_cor <- function(){
for(i in 1:ni){
est[i]  ~ dnorm(mu1[i], tau1[i])
mu1[i]  <- mu[treatment[i]] + u[treatment[i]] + b_time[treatment[i]] * time[i] + b_level[treatment[i]] * level[i]
tau1[i] <- 1/(se[i]^2)
}
for(j in 1:nt){
bf_mu[j]     ~ dcat(c(0.5, 0.5))
bf_time[j]   ~ dcat(c(0.5, 0.5))
bf_level[j]  ~ dcat(c(0.5, 0.5))
mu_M0[j]  ~ dnorm(0, 1/0.089^2)
mu_M1[j]  ~ dnorm(0, 1/0.91^2)
mu[j]     <- equals(bf_mu[j], 1)*mu_M0[j] + equals(bf_mu[j], 2)*mu_M1[j]
time_M0[j]  ~ dnorm(0, 1/0.003^2)
time_M1[j]  ~ dnorm(0, 1/0.91^2)
b_time[j]   <- equals(bf_time[j], 1)*time_M0[j] + equals(bf_time[j], 2)*time_M1[j]
level_M0[j]  ~ dnorm(0, 1/0.003^2)
level_M1[j]  ~ dnorm(0, 1/0.91^2)
b_level[j]   <- equals(bf_level[j], 1)*level_M0[j] + equals(bf_level[j], 2)*level_M1[j]
u[j]    ~ dnorm(0, 1/5^2)
}
}
mod <- R2jags::jags.parallel(data = mod_data,
model.file = meta_cor,
parameters.to.save =  c("mu", "bf_mu", "bf_time", "b_time", "bf_time", "b_time", "u"),
n.chains = 8,
n.thin = 20,
jags.seed = 666,
n.iter = 10500,
n.burnin = 500)
maxpost              <- function(x){d <- density(x); d$x[which.max(d$y)]}
bf_list <- apply(mod$BUGSoutput$sims.list$bf_mu, 2, table)
posterior     <- gather(as.data.frame(mod$BUGSoutput$sims.list$mu))
posterior$key <- plyr::mapvalues(posterior$key, unique(posterior$key), levels(mod_data$treatment))
effdf$ll <- as.numeric(effdf$d)-as.numeric(effdf$se)
effdf$ul <- as.numeric(effdf$d)+as.numeric(effdf$se)
post_sum <- cbind(aggregate(data=posterior, value~key, mean),
se=aggregate(data=posterior, value~key,sd)[,2],
ll=aggregate(data=posterior, value~key, function(x) quantile(x, .025))[,2],
ul=aggregate(data=posterior, value~key, function(x) quantile(x, .975))[,2])
post_sum$days <- NA
post_sum$level <- NA
post_sum$study <- "Posterior"
colnames(post_sum)[1:2] <- c("treatment", "d")
post_sum <- post_sum[,c("d", "se", "treatment", "days", "level", "study", "ll", "ul")]
eff_sum           <- rbind(effdf, post_sum)
eff_sum$colour    <- as.factor(ifelse(eff_sum$study=="Posterior",1,0))
eff_sum$study     <- ifelse(eff_sum$study %in% "Posterior", c(paste0(eff_sum$study, " mu=", round(as.numeric(eff_sum$d),2)," (se=", round(as.numeric(eff_sum$se), 2), ")")),  eff_sum$study)
eff_sum$study     <- as.factor(ifelse(eff_sum$colour==1, paste0(eff_sum$study, " BF10=", round(log(bf_list[2, ] / bf_list[1, ]),2)),eff_sum$study))
eff_sum$treatment <- as.factor(eff_sum$treatment)
ggplot(eff_sum, aes(as.numeric(d), study, col=colour))+
scale_color_manual(breaks = c(0, 1),
values = c("grey", "grey20"))+
geom_point()+geom_vline(xintercept = 0, lty=2, lwd=0.6, col="tomato3")+
geom_errorbarh(data=eff_sum, aes(xmin=ll, xmax=ul), height=0)+
theme_classic()+xlab("Cohen's d")+
theme(axis.title.y = element_blank(),
legend.position = "none")+
facet_wrap(.~treatment, scales="free_y")
