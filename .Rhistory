rep("Jackson et al. (2016)", nrow(jackson$data)),
rep("Crain et al. (2008)", nrow(crain$data))))
total_df$All <- "All"
all <- ptoz(coef=total_df$coef, sei=total_df$se, names = total_df$All, ylim=c(-10, 10), xlim=c(0, 30))
all$funnel_plot
all$study <- total_df$study
dataz <- all$data
plhist1 <- ggplot(data.frame(z=dataz$z), aes(z))+xlim(-10, 10)+
xlab("z-value")+geom_vline(xintercept = c(-1*qnorm(1 - .05/2), qnorm(1 - .05/2)), lwd=1, col="tomato3", lty=2)+
geom_histogram(col="black", fill="grey70",
position="identity",
binwidth = 0.5,
boundary = 0, closed = "left")+
theme_classic()
plhist2 <- ggplot(data.frame(z=dataz$z), aes(abs(z)))+xlim(0, 10)+
xlab("z-value")+geom_vline(xintercept = qnorm(1 - .05/2), lwd=1, col="tomato3", lty=2)+
geom_histogram(col="black", fill="grey70",
alpha=0.5, position="identity",
binwidth = 0.5,
boundary = 0, closed = "left")+
theme_classic()
fig4 <- cowplot::plot_grid(plhist1, plhist2, ncol=1, rel_heights = c(0.3, 0.7), labels = "AUTO", label_size = 10)
ggsave(fig4, filename = "C:/Users/admin/OneDrive/Bureaublad/bias/Fig4.JPEG",
width = 155, height = 120, units = "mm")
fig4
plhist1 <- ggplot(data.frame(z=dataz$z), aes(z))+xlim(-10, 10)+
xlab("z-value")+
geom_histogram(col="black", fill="grey70",
position="identity",
binwidth = 0.5,
boundary = 0, closed = "left")+
geom_vline(xintercept = c(-1*qnorm(1 - .05/2), qnorm(1 - .05/2)), lwd=1, col="tomato3", lty=2)+
theme_classic()
plhist2 <- ggplot(data.frame(z=dataz$z), aes(abs(z)))+xlim(0, 10)+
xlab("z-value")+
geom_histogram(col="black", fill="grey70",
alpha=0.5, position="identity",
binwidth = 0.5,
boundary = 0, closed = "left")+
geom_vline(xintercept = qnorm(1 - .05/2), lwd=1, col="tomato3", lty=2)+
theme_classic()
fig4 <- cowplot::plot_grid(plhist1, plhist2, ncol=1, rel_heights = c(0.3, 0.7), labels = "AUTO", label_size = 10)
fig4
ggsave(fig4, filename = "C:/Users/admin/OneDrive/Bureaublad/bias/Fig4.JPEG",
width = 155, height = 120, units = "mm")
p <- ggplot(data, aes(x = x, y = y, color = group)) +
geom_point(size = 5) +  # Use points to ensure the legend appears
scale_color_manual(
breaks = c("Tolerance", "Dispersal", "Competition"),
values = c("tomato2", "dodgerblue3", "green3"),
name = "ARC-components"
) +
theme(
legend.position = "right",  # Position the legend
axis.title = element_blank(),  # Remove axis titles
axis.text = element_blank(),  # Remove axis text
axis.ticks = element_blank(),  # Remove axis ticks
panel.grid = element_blank(),  # Remove grid lines
panel.background = element_blank(),  # Remove background
plot.margin = margin(0, 0, 0, 0)  # Remove margins
)
library(gglot2)
library(ggplot2)
p <- ggplot(data, aes(x = x, y = y, color = group)) +
geom_point(size = 5) +  # Use points to ensure the legend appears
scale_color_manual(
breaks = c("Tolerance", "Dispersal", "Competition"),
values = c("tomato2", "dodgerblue3", "green3"),
name = "ARC-components"
) +
theme(
legend.position = "right",  # Position the legend
axis.title = element_blank(),  # Remove axis titles
axis.text = element_blank(),  # Remove axis text
axis.ticks = element_blank(),  # Remove axis ticks
panel.grid = element_blank(),  # Remove grid lines
panel.background = element_blank(),  # Remove background
plot.margin = margin(0, 0, 0, 0)  # Remove margins
)
p
p <- ggplot(data.frame(x=c(0,1), y=c(0,1)), aes(x = x, y = y, color = group)) +
geom_point(size = 5) +  # Use points to ensure the legend appears
scale_color_manual(
breaks = c("Tolerance", "Dispersal", "Competition"),
values = c("tomato2", "dodgerblue3", "green3"),
name = "ARC-components"
) +
theme(
legend.position = "right",  # Position the legend
axis.title = element_blank(),  # Remove axis titles
axis.text = element_blank(),  # Remove axis text
axis.ticks = element_blank(),  # Remove axis ticks
panel.grid = element_blank(),  # Remove grid lines
panel.background = element_blank(),  # Remove background
plot.margin = margin(0, 0, 0, 0)  # Remove margins
)
p
p <- ggplot(data.frame(x=c(0,1), y=c(0,1), group=c("Tolerance", "Dispersal", "Competition")), aes(x = x, y = y, color = group)) +
geom_point(size = 5) +  # Use points to ensure the legend appears
scale_color_manual(
breaks = c("Tolerance", "Dispersal", "Competition"),
values = c("tomato2", "dodgerblue3", "green3"),
name = "ARC-components"
) +
theme(
legend.position = "right",  # Position the legend
axis.title = element_blank(),  # Remove axis titles
axis.text = element_blank(),  # Remove axis text
axis.ticks = element_blank(),  # Remove axis ticks
panel.grid = element_blank(),  # Remove grid lines
panel.background = element_blank(),  # Remove background
plot.margin = margin(0, 0, 0, 0)  # Remove margins
)
p <- ggplot(data.frame(x=c(0,.5,1), y=c(0,.5,1), group=c("Tolerance", "Dispersal", "Competition")), aes(x = x, y = y, color = group)) +
geom_point(size = 5) +  # Use points to ensure the legend appears
scale_color_manual(
breaks = c("Tolerance", "Dispersal", "Competition"),
values = c("tomato2", "dodgerblue3", "green3"),
name = "ARC-components"
) +
theme(
legend.position = "right",  # Position the legend
axis.title = element_blank(),  # Remove axis titles
axis.text = element_blank(),  # Remove axis text
axis.ticks = element_blank(),  # Remove axis ticks
panel.grid = element_blank(),  # Remove grid lines
panel.background = element_blank(),  # Remove background
plot.margin = margin(0, 0, 0, 0)  # Remove margins
)
p
p <- ggplot(data.frame(x=c(0,.5,1), y=c(0,.5,1), group=c("Tolerance", "Dispersal", "Competition")), aes(x = x, y = y, color = group)) +
geom_line(size = 5) +  # Use points to ensure the legend appears
scale_color_manual(
breaks = c("Tolerance", "Dispersal", "Competition"),
values = c("tomato2", "dodgerblue3", "green3"),
name = "ARC-components"
) +
theme(
legend.position = "right",  # Position the legend
axis.title = element_blank(),  # Remove axis titles
axis.text = element_blank(),  # Remove axis text
axis.ticks = element_blank(),  # Remove axis ticks
panel.grid = element_blank(),  # Remove grid lines
panel.background = element_blank(),  # Remove background
plot.margin = margin(0, 0, 0, 0)  # Remove margins
)
p
p <- ggplot(data.frame(x=c(0,.5,1), y=c(0,.5,1), group=c("Tolerance", "Dispersal", "Competition")), aes(x = x, y = y, color = group)) +
geom_line(size = 5) +  # Use points to ensure the legend appears
scale_color_manual(
breaks = c("Tolerance", "Dispersal", "Competition"),
values = c("tomato2", "dodgerblue3", "green3"),
name = "ARC-components"
) +
theme(
legend.position = "bottom",  # Position the legend
axis.title = element_blank(),  # Remove axis titles
axis.text = element_blank(),  # Remove axis text
axis.ticks = element_blank(),  # Remove axis ticks
panel.grid = element_blank(),  # Remove grid lines
panel.background = element_blank(),  # Remove background
plot.margin = margin(0, 0, 0, 0)  # Remove margins
)
p
p <- ggplot(data.frame(x=c(0,.5,1), y=c(0,.5,1), group=c("Tolerance", "Dispersal", "Competition")), aes(x = x, y = y, color = group)) +
geom_line(size = 5) +  # Use points to ensure the legend appears
scale_color_manual(
breaks = c("Tolerance", "Dispersal", "Competition"),
values = c("tomato2", "dodgerblue3", "green3"),
name = "ARC-components"
) + theme_classic()
p <- ggplot(data.frame(x=c(0,.5,1), y=c(0,.5,1), group=c("Tolerance", "Dispersal", "Competition")), aes(x = x, y = y, color = group)) +
geom_line(size = 5) +  # Use points to ensure the legend appears
scale_color_manual(
breaks = c("Tolerance", "Dispersal", "Competition"),
values = c("tomato2", "dodgerblue3", "green3"),
name = "ARC-components"
) + theme_classic()+
theme(
legend.position = "bottom",  # Position the legend
axis.title = element_blank(),  # Remove axis titles
axis.text = element_blank(),  # Remove axis text
axis.ticks = element_blank(),  # Remove axis ticks
panel.grid = element_blank(),  # Remove grid lines
panel.background = element_blank(),  # Remove background
plot.margin = margin(0, 0, 0, 0)  # Remove margins
)
p
p <- ggplot(data.frame(x=c(0,.5,1), y=c(0,.5,1), group=c("Tolerance", "Dispersal", "Competition")), aes(x = x, y = y, color = group)) +
geom_line(size = 5) +  # Use points to ensure the legend appears
scale_color_manual(
breaks = c("Tolerance", "Dispersal", "Competition"),
values = c("tomato2", "dodgerblue3", "green3"),
name = "ARC-components"
) + theme_void()+
theme(
legend.position = "bottom",  # Position the legend
axis.title = element_blank(),  # Remove axis titles
axis.text = element_blank(),  # Remove axis text
axis.ticks = element_blank(),  # Remove axis ticks
panel.grid = element_blank(),  # Remove grid lines
panel.background = element_blank(),  # Remove background
plot.margin = margin(0, 0, 0, 0)  # Remove margins
)
p
legend <- get_legend(p)
library(cowplot)
legend <- get_legend(p)
legend
shiny::runApp('C:/Users/admin/OneDrive/Bureaublad/shiny')
runApp('C:/Users/admin/OneDrive/Bureaublad/shiny')
#df   <- read_excel("C:/Users/admin/OneDrive/Bureaublad/Paper3/Non_sys/10.1016_j.scitotenv.2020.144324.xlsx", sheet = 2)
#df   <- read_excel("C:/Users/admin/OneDrive/Bureaublad/Paper3/Non_sys/10.1016_j.ecolind.2019.105535.xlsx")
df   <- read_excel("C:/Users/admin/OneDrive/Bureaublad/Paper3/extracted data/paper_29061.xlsx", sheet=1)
library(glmmTMB)
library(gamlss)
library(readxl)
#df   <- read_excel("C:/Users/admin/OneDrive/Bureaublad/Paper3/Non_sys/10.1016_j.scitotenv.2020.144324.xlsx", sheet = 2)
#df   <- read_excel("C:/Users/admin/OneDrive/Bureaublad/Paper3/Non_sys/10.1016_j.ecolind.2019.105535.xlsx")
df   <- read_excel("C:/Users/admin/OneDrive/Bureaublad/Paper3/extracted data/paper_29061.xlsx", sheet=1)
View(df)
#df$cover <- df$cover/100
#df$temp <- as.numeric(df$temp)
t(apply(df, 2, function(x) c(mean(as.numeric(x), na.rm=T), sd(as.numeric(x), na.rm = T))))
colnames(df)
View(df)
#df   <- read_excel("C:/Users/admin/OneDrive/Bureaublad/Paper3/Non_sys/10.1016_j.scitotenv.2020.144324.xlsx", sheet = 2)
#df   <- read_excel("C:/Users/admin/OneDrive/Bureaublad/Paper3/Non_sys/10.1016_j.ecolind.2019.105535.xlsx")
df   <- read_excel("C:/Users/admin/OneDrive/Bureaublad/Paper3/extracted data/paper_29061.xlsx", sheet=1)
#df2 <- gather(df, "key", "value", -"Density ind m²", -"Date", -Taxon)
#df2$code <- paste0(df2$Date, df2$value)
#df2      <- df2[!duplicated(paste0(df2$Taxon, df2$code)),]
#df3 <- spread(df2, "Taxon", "Density ind m²")
df <- na.omit(df)
#df$cover <- df$cover/100
#df$temp <- as.numeric(df$temp)
t(apply(df, 2, function(x) c(mean(as.numeric(x), na.rm=T), sd(as.numeric(x), na.rm = T))))
colnames(df)
#df$y  <- as.integer(df$ntaxa)
#df$y   <- as.integer(as.numeric(df$cover))
#df$y  <- df$cover
#df$y <- df$even
#df$y <- df$ept
#df$y[df$y>1] <-1
#df$y   <- df$nept/df$ntaxa
#df$y <- df$`Shannon diversity`/log(df$Taxa_S)
#df$y <- df$OTUs
#df$y  <- df$`sensitive fish`
df$y <- vegan::specnumber(df[,c(8:ncol(df))])
df$y
df[,c(8:ncol(df))]
#df$y  <- as.integer(df$ntaxa)
#df$y   <- as.integer(as.numeric(df$cover))
#df$y  <- df$cover
#df$y <- df$even
#df$y <- df$ept
#df$y[df$y>1] <-1
#df$y   <- df$nept/df$ntaxa
#df$y <- df$`Shannon diversity`/log(df$Taxa_S)
#df$y <- df$OTUs
#df$y  <- df$`sensitive fish`
df$y <- vegan::specnumber(df[,c(9:ncol(df))])
#df$y  <- as.integer(df$ntaxa)
#df$y   <- as.integer(as.numeric(df$cover))
#df$y  <- df$cover
#df$y <- df$even
#df$y <- df$ept
#df$y[df$y>1] <-1
#df$y   <- df$nept/df$ntaxa
#df$y <- df$`Shannon diversity`/log(df$Taxa_S)
#df$y <- df$OTUs
#df$y  <- df$`sensitive fish`
df$y <- vegan::specnumber(df[,c(9:ncol(df))])
#df$y  <- as.integer(df$ntaxa)
#df$y   <- as.integer(as.numeric(df$cover))
#df$y  <- df$cover
#df$y <- df$even
#df$y <- df$ept
#df$y[df$y>1] <-1
#df$y   <- df$nept/df$ntaxa
#df$y <- df$`Shannon diversity`/log(df$Taxa_S)
#df$y <- df$OTUs
#df$y  <- df$`sensitive fish`
df$y <- vegan::specnumber(df[,c(9:ncol(df))])
#df$fs <- log(df$fs)
df$ec  <- log(df$ec)
colnames(df)
library(glmmTMB)
library(gamlss)
library(readxl)
#df   <- read_excel("C:/Users/admin/OneDrive/Bureaublad/Paper3/Non_sys/10.1016_j.scitotenv.2020.144324.xlsx", sheet = 2)
#df   <- read_excel("C:/Users/admin/OneDrive/Bureaublad/Paper3/Non_sys/10.1016_j.ecolind.2019.105535.xlsx")
df   <- read_excel("C:/Users/admin/OneDrive/Bureaublad/Paper3/extracted data/paper_29061.xlsx", sheet=1)
#df2 <- gather(df, "key", "value", -"Density ind m²", -"Date", -Taxon)
#df2$code <- paste0(df2$Date, df2$value)
#df2      <- df2[!duplicated(paste0(df2$Taxon, df2$code)),]
#df3 <- spread(df2, "Taxon", "Density ind m²")
df <- na.omit(df)
#df$cover <- df$cover/100
#df$temp <- as.numeric(df$temp)
t(apply(df, 2, function(x) c(mean(as.numeric(x), na.rm=T), sd(as.numeric(x), na.rm = T))))
colnames(df)
#df$fs <- log(df$fs)
df$ec  <- log(df$ec)
#df$tn  <- log(df$tn)
#df$tp  <- log(df$tp)
df$po4 <- log(df$po4)
#df$din <- log(df$din)
#df$srp <- log(df$srp)
df$no3 <- log(df$no3)
df$temp <- log(df$temp)
df$flow <- log(df$flow)
#df$vel  <- log(df$vel)
#df$dis <- log(df$dis)
#df$o2  <- log(df$oxygen)
df$do <- log(df$do)
plot(df$temp, df$y, pch=19)
library(glmmTMB)
library(gamlss)
library(readxl)
#df   <- read_excel("C:/Users/admin/OneDrive/Bureaublad/Paper3/Non_sys/10.1016_j.scitotenv.2020.144324.xlsx", sheet = 2)
#df   <- read_excel("C:/Users/admin/OneDrive/Bureaublad/Paper3/Non_sys/10.1016_j.ecolind.2019.105535.xlsx")
df   <- read_excel("C:/Users/admin/OneDrive/Bureaublad/Paper3/extracted data/paper_29061.xlsx", sheet=1)
#df2 <- gather(df, "key", "value", -"Density ind m²", -"Date", -Taxon)
#df2$code <- paste0(df2$Date, df2$value)
#df2      <- df2[!duplicated(paste0(df2$Taxon, df2$code)),]
#df3 <- spread(df2, "Taxon", "Density ind m²")
df <- na.omit(df)
#df$cover <- df$cover/100
#df$temp <- as.numeric(df$temp)
t(apply(df, 2, function(x) c(mean(as.numeric(x), na.rm=T), sd(as.numeric(x), na.rm = T))))
colnames(df)
#df$y  <- as.integer(df$ntaxa)
#df$y   <- as.integer(as.numeric(df$cover))
#df$y  <- df$cover
#df$y <- df$even
#df$y <- df$ept
#df$y[df$y>1] <-1
#df$y   <- df$nept/df$ntaxa
#df$y <- df$`Shannon diversity`/log(df$Taxa_S)
#df$y <- df$OTUs
#df$y  <- df$`sensitive fish`
df$y <- vegan::specnumber(df[,c(9:ncol(df))])
#df$fs <- log(df$fs)
df$ec  <- log(df$ec)
#df$tn  <- log(df$tn)
#df$tp  <- log(df$tp)
df$po4 <- log(df$po4)
#df$din <- log(df$din)
#df$srp <- log(df$srp)
df$no3 <- log(df$no3)
df$temp <- log(df$temp)
df$flow <- log(df$flow)
#df$vel  <- log(df$vel)
#df$dis <- log(df$dis)
#df$o2  <- log(df$oxygen)
df$do <- log(df$do)
plot(df$temp, df$y, pch=19)
summary(mod <- glmmTMB(y~ec+flow+temp+no3+po4+do, data=df, family = nbinom2(link="log")))
summary(mod2 <- update(mod, control=glmmTMBControl(optimizer=optim, optArgs=list(method="BFGS"))))
35/195
68/195
nrow(df)
library(glmmTMB)
library(gamlss)
library(readxl)
#df   <- read_excel("C:/Users/admin/OneDrive/Bureaublad/Paper3/Non_sys/10.1016_j.scitotenv.2020.144324.xlsx", sheet = 2)
#df   <- read_excel("C:/Users/admin/OneDrive/Bureaublad/Paper3/Non_sys/10.1016_j.ecolind.2019.105535.xlsx")
df   <- read_excel("C:/Users/admin/OneDrive/Bureaublad/Paper3/extracted data/paper_29061.xlsx", sheet=1)
#df2 <- gather(df, "key", "value", -"Density ind m²", -"Date", -Taxon)
#df2$code <- paste0(df2$Date, df2$value)
#df2      <- df2[!duplicated(paste0(df2$Taxon, df2$code)),]
#df3 <- spread(df2, "Taxon", "Density ind m²")
df <- na.omit(df)
#df$cover <- df$cover/100
#df$temp <- as.numeric(df$temp)
t(apply(df, 2, function(x) c(mean(as.numeric(x), na.rm=T), sd(as.numeric(x), na.rm = T))))
library(glmmTMB)
library(gamlss)
library(readxl)
#df   <- read_excel("C:/Users/admin/OneDrive/Bureaublad/Paper3/Non_sys/10.1016_j.scitotenv.2020.144324.xlsx", sheet = 2)
#df   <- read_excel("C:/Users/admin/OneDrive/Bureaublad/Paper3/Non_sys/10.1016_j.ecolind.2019.105535.xlsx")
df   <- read_excel("C:/Users/admin/OneDrive/Bureaublad/Paper3/extracted data/paper_29061.xlsx", sheet=1)
#df2 <- gather(df, "key", "value", -"Density ind m²", -"Date", -Taxon)
#df2$code <- paste0(df2$Date, df2$value)
#df2      <- df2[!duplicated(paste0(df2$Taxon, df2$code)),]
#df3 <- spread(df2, "Taxon", "Density ind m²")
df <- na.omit(df)
#df$cover <- df$cover/100
#df$temp <- as.numeric(df$temp)
t(apply(df, 2, function(x) c(mean(as.numeric(x), na.rm=T), sd(as.numeric(x), na.rm = T))))
colnames(df)
#df$y  <- as.integer(df$ntaxa)
#df$y   <- as.integer(as.numeric(df$cover))
#df$y  <- df$cover
#df$y <- df$even
#df$y <- df$ept
#df$y[df$y>1] <-1
#df$y   <- df$nept/df$ntaxa
#df$y <- df$`Shannon diversity`/log(df$Taxa_S)
#df$y <- df$OTUs
#df$y  <- df$`sensitive fish`
df$y <- vegan::specnumber(df[,c(9:ncol(df))])
#df$fs <- log(df$fs)
df$ec  <- log(df$ec)
#df$tn  <- log(df$tn)
#df$tp  <- log(df$tp)
df$po4 <- log(df$po4)
#df$din <- log(df$din)
#df$srp <- log(df$srp)
df$no3 <- log(df$no3)
df$temp <- log(df$temp)
df$flow <- log(df$flow)
#df$vel  <- log(df$vel)
#df$dis <- log(df$dis)
#df$o2  <- log(df$oxygen)
df$do <- log(df$do)
plot(df$temp, df$y, pch=19)
summary(mod <- glmmTMB(y~ec+do+temp, data=df, family = beta_family(link="logit")))
summary(mod <- glmmTMB(y~ec+flow+temp+no3+po4+do+(1|river), data=df, family = nbinom2(link="log")))
library(glmmTMB)
library(gamlss)
library(readxl)
#df   <- read_excel("C:/Users/admin/OneDrive/Bureaublad/Paper3/Non_sys/10.1016_j.scitotenv.2020.144324.xlsx", sheet = 2)
#df   <- read_excel("C:/Users/admin/OneDrive/Bureaublad/Paper3/Non_sys/10.1016_j.ecolind.2019.105535.xlsx")
df   <- read_excel("C:/Users/admin/OneDrive/Bureaublad/Paper3/extracted data/paper_29061.xlsx", sheet=1)
#dfe
#df2 <- gather(df, "key", "value", -"Density ind m²", -"Date", -Taxon)
#df2$code <- paste0(df2$Date, df2$value)
#df2      <- df2[!duplicated(paste0(df2$Taxon, df2$code)),]
#df3 <- spread(df2, "Taxon", "Density ind m²")
df <- na.omit(df)
#df$cover <- df$cover/100
#df$temp <- as.numeric(df$temp)
t(apply(df, 2, function(x) c(mean(as.numeric(x), na.rm=T), sd(as.numeric(x), na.rm = T))))
#df<- df[-c(1,8:10)]
colnames(df)
#df$y  <- as.integer(df$ntaxa)
#df$y   <- as.integer(as.numeric(df$cover))
#df$y  <- df$cover
#df$y <- df$even
#df$y <- df$ept
#df$y[df$y>1] <-1
#df$y   <- df$nept/df$ntaxa
#df$y <- df$`Shannon diversity`/log(df$Taxa_S)
#df$y <- df$OTUs
#df$y  <- df$`sensitive fish`
df$y <- vegan::specnumber(df[,c(9:ncol(df))])
#df$y <- vegan::diversity(df[,c(5:ncol(df))])/log(vegan::specnumber(df[,c(5:ncol(df))]))
#df$y  <- 1-df$sh/max(df$sh)
#df$fs[df$fs == 0] <- 1
#df$fs <- log(df$fs)
df$ec  <- log(df$ec)
#df$tn  <- log(df$tn)
#df$tp  <- log(df$tp)
df$po4 <- log(df$po4)
#df$din <- log(df$din)
#df$srp <- log(df$srp)
df$no3 <- log(df$no3)
df$temp <- log(df$temp)
df$flow <- log(df$flow)
#df$vel  <- log(df$vel)
#df$dis <- log(df$dis)
#df$o2  <- log(df$oxygen)
df$do <- log(df$do)
plot(df$temp, df$y, pch=19)
summary(mod <- glmmTMB(y~ec+flow+temp+no3+po4+do+(1|river), data=df, family = nbinom2(link="log")))
library(glmmTMB)
library(gamlss)
library(readxl)
#df   <- read_excel("C:/Users/admin/OneDrive/Bureaublad/Paper3/Non_sys/10.1016_j.scitotenv.2020.144324.xlsx", sheet = 2)
#df   <- read_excel("C:/Users/admin/OneDrive/Bureaublad/Paper3/Non_sys/10.1016_j.ecolind.2019.105535.xlsx")
df   <- read_excel("C:/Users/admin/OneDrive/Bureaublad/Paper3/extracted data/paper_29061.xlsx", sheet=1)
#df2 <- gather(df, "key", "value", -"Density ind m²", -"Date", -Taxon)
#df2$code <- paste0(df2$Date, df2$value)
#df2      <- df2[!duplicated(paste0(df2$Taxon, df2$code)),]
#df3 <- spread(df2, "Taxon", "Density ind m²")
df <- na.omit(df)
#df$cover <- df$cover/100
#df$temp <- as.numeric(df$temp)
t(apply(df, 2, function(x) c(mean(as.numeric(x), na.rm=T), sd(as.numeric(x), na.rm = T))))
colnames(df)
#df$y   <- as.integer(as.numeric(df$cover))
#df$y  <- df$cover
#df$y <- df$even
#df$y <- df$ept
#df$y[df$y>1] <-1
#df$y   <- df$nept/df$ntaxa
#df$y <- df$`Shannon diversity`/log(df$Taxa_S)
#df$y <- df$OTUs
#df$y  <- df$`sensitive fish`
#df$y <- vegan::specnumber(df[,c(9:ncol(df))])
df$y <- vegan::diversity(df[,c(9:ncol(df))])/log(vegan::specnumber(df[,c(9:ncol(df))]))
#df$fs <- log(df$fs)
df$ec  <- log(df$ec)
#df$tn  <- log(df$tn)
#df$tp  <- log(df$tp)
df$po4 <- log(df$po4)
#df$din <- log(df$din)
#df$srp <- log(df$srp)
df$no3 <- log(df$no3)
df$temp <- log(df$temp)
df$flow <- log(df$flow)
#df$vel  <- log(df$vel)
#df$dis <- log(df$dis)
#df$o2  <- log(df$oxygen)
df$do <- log(df$do)
plot(df$temp, df$y, pch=19)
summary(mod <- glmmTMB(y~ec+flow+temp+no3+po4+do+(1|river), data=df, family = nbinom2(link="log")))
summary(mod <- glmmTMB(y~ec+do+temp, data=df, family = beta_family(link="logit")))
summary(mod <- glmmTMB(y~ec+flow+temp+no3+po4+do+(1|river), data=df, family = beta_family(link="logit")))
nrow(df)
