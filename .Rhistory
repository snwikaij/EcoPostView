hop_lwd = 0.3, xtextsize = 8,
ytextsize = 8)
yep
yep <- hop(mod, group="Invertebrates", predictor = "Salinity-increase",
xlab=  expression(Salinity ~ "[" ~ µS ~ "*" ~ cm^{-1} ~ "]"),
link_function = "logit", ylab="Invertebrate evenness",
xlim=c(0, 8.51), ylim=c(0, 0.5),
round_x_axis = 0, exp_axis = F, exp_disp = T,
nr_hops = 25, hop_alpha = 0.05,
hop_lwd = 0.3, xtextsize = 8,
ytextsize = 8)
yep
yep <- hop(mod, group="Invertebrates", predictor = "Salinity-increase",
xlab=  expression(Salinity ~ "[" ~ µS ~ "*" ~ cm^{-1} ~ "]"),
link_function = "logit", ylab="Invertebrate evenness",
xlim=c(0, 8.51), ylim=c(0, 0.5),
round_x_axis = 0, exp_axis = F, exp_disp = T,
nr_hops = 2500, hop_alpha = 0.05,
hop_lwd = 0.3, xtextsize = 8,
ytextsize = 8)
yep
hop_pl1 <- hop(mod, group="Invertebrates", predictor = "Salinity-increase",
xlab=  expression(Salinity ~ "[" ~ µS ~ "*" ~ cm^{-1} ~ "]"),
link_function = "logit", ylab="Invertebrate evenness",
xlim=c(2.98, 8.51), ylim=c(0, 0.5),
exp_axis = T, round_x_axis = 0,
nr_hops = 2500, hop_alpha = 0.05,
hop_lwd = 0.3, xtextsize = 8,
ytextsize = 8)
yep <- hop(mod, group="Invertebrates", predictor = "Salinity-increase",
xlab=  expression(Salinity ~ "[" ~ µS ~ "*" ~ cm^{-1} ~ "]"),
link_function = "logit", ylab="Invertebrate evenness",
xlim=c(2.98, 8.51), ylim=c(0, 0.5),
round_x_axis = 0, exp_axis = , exp_disp = T,
nr_hops = 2500, hop_alpha = 0.05,
hop_lwd = 0.3, xtextsize = 8,
ytextsize = 8)
yep
hop_pl1 <- hop(mod, group="Invertebrates", predictor = "Salinity-increase",
xlab=  expression(Salinity ~ "[" ~ µS ~ "*" ~ cm^{-1} ~ "]"),
link_function = "logit", ylab="Invertebrate evenness",
xlim=c(2.98, 8.51), ylim=c(0, 0.5),
exp_axis = T, round_x_axis = 0,
nr_hops = 2500, hop_alpha = 0.05,
hop_lwd = 0.3, xtextsize = 8,
ytextsize = 8)
hop_pl1
temp <- seq(15, 35, 5)
temp   <- seq(15, 35, 5)
temp
temp   <- seq(15, 35, 5)
y  <- b0+b1*temp+rnorm(length(temp), 0, )
plot(x, y)
temp   <- seq(15, 35, 5)
y  <- b0+b1*temp+rnorm(length(temp), 0, 20)
plot(temp, y)
temp   <- seq(15, 35, 5)
temp  <- seq(15, 35, 5)
b0    <- 3
b1    <- -3
y  <- rpois(b0+b1*temp)
temp  <- seq(15, 35, 5)
b0    <- 3
b1    <- -3
y  <- rpois(length(temp), b0+b1*temp)
temp  <- seq(15, 35, 5)
b0    <- 3
b1    <- -3
y  <- rpois(length(temp), exp(b0+b1*temp))
plot(temp, y)
exp(b0+b1*temp)
temp  <- seq(15, 35, 5)
b0    <- 3
b1    <- -0.02
y  <- rpois(length(temp), exp(b0+b1*temp))
plot(temp, y)
temp  <- seq(15, 35, 1)
b0    <- 3
b1    <- -0.02
y  <- rpois(length(temp), exp(b0+b1*temp))
plot(temp, y)
temp  <- seq(15, 35, .5)
b0    <- 3
b1    <- -0.02
y  <- rpois(length(temp), exp(b0+b1*temp))
plot(temp, y)
temp  <- seq(15, 35, .25)
b0    <- 3
b1    <- -0.02
y  <- rpois(length(temp), exp(b0+b1*temp))
plot(temp, y)
temp  <- seq(15, 35, length.out=100)
b0    <- 3
b1    <- -0.02
y  <- rpois(length(temp), exp(b0+b1*temp))
plot(temp, y)
temp  <- seq(15, 35, length.out=100)
b0    <- 3
b1    <- -0.02
y  <- rpois(length(temp), exp(b0+b1*temp))
plot(temp, y)
glm(y~x, data=data.frame(x=temp, y=y))
summary(mod <- glm(y~x, data=data.frame(x=temp, y=y)))
summary(mod <- glm(y~x, data=data.frame(x=temp, y=y)))$coef
summary(mod <- glm(y~x, data=data.frame(x=temp, y=y)))$coef[2,5]
summary(mod <- glm(y~x, data=data.frame(x=temp, y=y)))$coef[c(5,2)]
summary(mod <- glm(y~x, data=data.frame(x=temp, y=y)))$coef[2,5]
summary(mod <- glm(y~x, data=data.frame(x=temp, y=y)))$coef[2,4]
summary(mod <- glm(y~x, data=data.frame(x=temp, y=y)))$coef[2,4]
summary(mod <- glm(y~x, data=data.frame(x=temp, y=y)))$coef[2,4]
summary(mod <- glm(y~x, data=data.frame(x=temp, y=y)))$coef[2,4]
pval <- as.numeric()
pval <- as.numeric()
for(i in 1:1000){
print(i)
temp  <- seq(15, 35, length.out=100)
b0    <- 3
b1    <- -0.02
y     <- rpois(length(temp), exp(b0+b1*temp))
pval[i] <- summary(mod <- glm(y~x, data=data.frame(x=temp, y=y)))$coef[2,4]}
hist(pval)
n <- seq(nmin, nmax, nstep)
nmin=5
nmax=200
nstep=5
n <- seq(nmin, nmax, nstep)
n
n        <- seq(nmin, nmax, nstep)
err_list <- list()
n        <- seq(nmin, nmax, nstep)
err_list <- list()
pval     <- as.numeric()
b0=3
b1=-0,02
b0=3
b1=-0.02
pval     <- array(NA, dim=c(nsim, 2, 3))
glm_samp <- function(b0=3, b1=-0.02, minx=15, maxx=35, nmin=5, nmax=200, nstep=5, nsim=1000){
glm_samp <- function(b0=3, b1=-0.02, minx=15, maxx=35, nmin=5, nmax=200, nstep=5, nsim=1000){
n        <- seq(nmin, nmax, nstep)
err_list <- list()
for(j in n){
pval     <- array(NA, dim=c(nsim, 2))
for(i in 1:nsim){
print(i)
temp  <- seq(15, 35, length.out=n)
y        <- rpois(length(temp), exp(b0+b1*temp))
pval[i,] <- c(j, summary(mod <- glm(y~x, data=data.frame(x=temp, y=y)))$coef[2,4])}
err_list[j] <- pval
}
return(err_list)
}
yep <- glm_samp
glm_samp <- function(b0=3, b1=-0.02, minx=15, maxx=35, nmin=5, nmax=200, nstep=5, nsim=1000){
n        <- seq(nmin, nmax, nstep)
err_list <- list()
print(j)
for(j in n){
pval     <- array(NA, dim=c(nsim, 2))
for(i in 1:nsim){
print(i)
temp  <- seq(15, 35, length.out=n)
y        <- rpois(length(temp), exp(b0+b1*temp))
pval[i,] <- c(j, summary(mod <- glm(y~x, data=data.frame(x=temp, y=y)))$coef[2,4])}
err_list[j] <- pval
}
return(err_list)
}
yep <- glm_samp
n        <- seq(nmin, nmax, nstep)
err_list <- list()
print(j)
glm_samp <- function(b0=3, b1=-0.02, minx=15, maxx=35, nmin=5, nmax=200, nstep=5, nsim=1000){
n        <- seq(nmin, nmax, nstep)
err_list <- list()
for(j in n){
print(j)
pval     <- array(NA, dim=c(nsim, 2))
for(i in 1:nsim){
print(i)
temp  <- seq(15, 35, length.out=n)
y        <- rpois(length(temp), exp(b0+b1*temp))
pval[i,] <- c(j, summary(mod <- glm(y~x, data=data.frame(x=temp, y=y)))$coef[2,4])}
err_list[j] <- pval
}
return(err_list)
}
yep <- glm_samp
yep
b0=3
b1=-0.02
minx=15
maxx=35
nmin=5
nmax=200
nstep=5
nsim=1000
n        <- seq(nmin, nmax, nstep)
err_list <- list()
for(j in n){
print(j)
pval     <- array(NA, dim=c(nsim, 2))
for(i in 1:nsim){
print(i)
temp  <- seq(15, 35, length.out=n)
y        <- rpois(length(temp), exp(b0+b1*temp))
pval[i,] <- c(j, summary(mod <- glm(y~x, data=data.frame(x=temp, y=y)))$coef[2,4])}
err_list[j] <- pval
}
n        <- seq(nmin, nmax, nstep)
err_list <- list()
for(j in n){
print(j)
pval     <- array(NA, dim=c(nsim, 2))
for(i in 1:nsim){
print(i)
temp  <- seq(15, 35, length.out=i)
y        <- rpois(length(temp), exp(b0+b1*temp))
pval[i,] <- c(j, summary(mod <- glm(y~x, data=data.frame(x=temp, y=y)))$coef[2,4])}
err_list[j] <- pval
}
summary(mod <- glm(y~x, data=data.frame(x=temp, y=y)))$coef[2,4]
data.frame(x=temp, y=y)
i
glm_samp <- function(b0=3, b1=-0.02, minx=15, maxx=35, nmin=5, nmax=200, nstep=5, nsim=1000){
n        <- seq(nmin, nmax, nstep)
err_list <- list()
for(j in n){
print(j)
pval     <- array(NA, dim=c(nsim, 2))
for(i in 3:nsim){
print(i)
temp  <- seq(15, 35, length.out=i)
y        <- rpois(length(temp), exp(b0+b1*temp))
pval[i,] <- c(j, summary(mod <- glm(y~x, data=data.frame(x=temp, y=y)))$coef[2,4])}
err_list[j] <- pval
}
return(err_list)
}
yep <- glm_samp
yep
n        <- seq(nmin, nmax, nstep)
err_list <- list()
for(j in n){
print(j)
pval     <- array(NA, dim=c(nsim, 2))
for(i in 3:nsim){
print(i)
temp  <- seq(15, 35, length.out=i)
y        <- rpois(length(temp), exp(b0+b1*temp))
pval[i,] <- c(j, summary(mod <- glm(y~x, data=data.frame(x=temp, y=y)))$coef[2,4])}
err_list[j] <- pval
}
nsim=100
n        <- seq(nmin, nmax, nstep)
err_list <- list()
for(j in n){
print(j)
pval     <- array(NA, dim=c(nsim, 2))
for(i in 3:nsim){
temp  <- seq(15, 35, length.out=i)
y        <- rpois(length(temp), exp(b0+b1*temp))
pval[i,] <- c(j, summary(mod <- glm(y~x, data=data.frame(x=temp, y=y)))$coef[2,4])}
err_list[j] <- pval
}
pval
c(j, summary(mod <- glm(y~x, data=data.frame(x=temp, y=y)))$coef[2,4])
pval[i,] <- c(j, summary(mod <- glm(y~x, data=data.frame(x=temp, y=y)))$coef[2,4])
err_list[j] <- pval
n        <- seq(nmin, nmax, nstep)
err_list <- list()
for(j in n){
print(j)
pval     <- array(NA, dim=c(nsim, 2))
for(i in 3:nsim){
temp  <- seq(15, 35, length.out=i)
y        <- rpois(length(temp), exp(b0+b1*temp))
pval[i,] <- c(j, summary(mod <- glm(y~x, data=data.frame(x=temp, y=y)))$coef[2,4])}
err_list[[j]] <- pval
}
glm_samp <- function(b0=3, b1=-0.02, minx=15, maxx=35, nmin=5, nmax=200, nstep=5, nsim=100){
n        <- seq(nmin, nmax, nstep)
err_list <- list()
for(j in n){
print(j)
pval     <- array(NA, dim=c(nsim, 2))
for(i in 3:nsim){
temp  <- seq(15, 35, length.out=i)
y        <- rpois(length(temp), exp(b0+b1*temp))
pval[i,] <- c(j, summary(mod <- glm(y~x, data=data.frame(x=temp, y=y)))$coef[2,4])}
err_list[[j]] <- pval
}
return(err_list)
}
yep <- glm_samp
glm_samp <- function(b0=3, b1=-0.02, minx=15, maxx=35, nmin=5, nmax=200, nstep=5, nsim=100){
n        <- seq(nmin, nmax, nstep)
err_list <- list()
for(j in n){
print(j)
pval     <- array(NA, dim=c(nsim, 2))
for(i in 3:nsim){
temp  <- seq(15, 35, length.out=i)
y        <- rpois(length(temp), exp(b0+b1*temp))
pval[i,] <- c(j, summary(mod <- glm(y~x, data=data.frame(x=temp, y=y)))$coef[2,4])}
err_list[[j]] <- pval
}
return(err_list)
}
yep <- glm_samp
n        <- seq(nmin, nmax, nstep)
err_list <- list()
for(j in n){
print(j)
pval     <- array(NA, dim=c(nsim, 2))
for(i in 3:nsim){
temp  <- seq(15, 35, length.out=i)
y        <- rpois(length(temp), exp(b0+b1*temp))
pval[i,] <- c(j, summary(mod <- glm(y~x, data=data.frame(x=temp, y=y)))$coef[2,4])}
err_list[[j]] <- pval
}
b0=3
b1=-0.02
minx=15
maxx=35
nmin=5
nmax=200
nstep=5
nsim=100
nsim=100
n        <- seq(nmin, nmax, nstep)
err_list <- list()
for(j in n){
print(j)
pval     <- array(NA, dim=c(nsim, 2))
for(i in 3:nsim){
temp  <- seq(15, 35, length.out=i)
y        <- rpois(length(temp), exp(b0+b1*temp))
pval[i,] <- c(j, summary(mod <- glm(y~x, data=data.frame(x=temp, y=y)))$coef[2,4])}
err_list[[j]] <- pval
}
do.call(rbind.data.frame, err_list)
total <- do.call(rbind.data.frame, err_list)
aggregate(data=total, V2~V1, function(x) sum(x<.05, na.rm = T))
View(total)
plot(total$V1, total$V2)
n        <- seq(nmin, nmax, nstep)
err_list <- list()
for(j in n){
print(j)
pval     <- array(NA, dim=c(nsim, 2))
for(i in 3:nsim){
x        <- seq(15, 35, length.out=i)
y        <- rpois(length(x), exp(b0+b1*x))
pval[i,] <- c(j, summary(mod <- glm(y~x, data=data.frame(x=x, y=y)))$coef[2,4])}
err_list[[j]] <- pval
}
err_list
total <- do.call(rbind.data.frame, err_list)
View(total)
na.omit(total)
na.omit(total)
total <- do.call(rbind.data.frame, err_list)
total <- na.omit(total)
aggregate(data=total, V2~V1, function(x) sum(x<.05, na.rm = T))
nsim=300
n        <- seq(nmin, nmax, nstep)
err_list <- list()
for(j in n){
print(j)
pval     <- array(NA, dim=c(nsim, 2))
for(i in 3:nsim){
x        <- seq(15, 35, length.out=i)
y        <- rpois(length(x), exp(b0+b1*x))
pval[i,] <- c(j, summary(mod <- glm(y~x, data=data.frame(x=x, y=y)))$coef[2,4])}
err_list[[j]] <- pval
}
do.call(rbind.data.frame, err_list)
tot <- do.call(rbind.data.frame, err_list)
na.omit(tot)
n        <- seq(nmin, nmax, nstep)
err_list <- list()
alpha=0.05
n        <- seq(nmin, nmax, nstep)
err_list <- list()
for(j in n){
print(j)
pval     <- array(NA, dim=c(nsim, 2))
for(i in 3:nsim){
x        <- seq(15, 35, length.out=i)
y        <- rpois(length(x), exp(b0+b1*x))
pval[i,] <- c(j, ifelse(summary(mod <- glm(y~x, data=data.frame(x=x, y=y)))$coef[2,4]<alpha,1,0))
}
err_list[[j]] <- pval
}
tot <- do.call(rbind.data.frame, err_list)
tot <- na.omit(tot)
aggregate(data=tot, V2~V1, function(x), sum(x,na.rm = T))
aggregate(data=tot, V2~V1, function(x) sum(x,na.rm = T))
n        <- seq(nmin, nmax, nstep)
err_list <- list()
print(j)
pval     <- array(NA, dim=c(nsim, 2))
pval
x        <- seq(15, 35, length.out=j)
x
y        <- rpois(length(x), exp(b0+b1*x))
y
n        <- seq(nmin, nmax, nstep)
err_list <- list()
for(j in n){
print(j)
pval     <- array(NA, dim=c(nsim, 2))
for(i in 1:nsim){
x        <- seq(15, 35, length.out=j)
y        <- rpois(length(x), exp(b0+b1*x))
pval[i,] <- c(j, ifelse(summary(mod <- glm(y~x, data=data.frame(x=x, y=y)))$coef[2,4]<alpha,1,0))
}
err_list[[j]] <- pval
}
tot <- do.call(rbind.data.frame, err_list)
tot <- na.omit(tot)
aggregate(data=tot, V2~V1, function(x) sum(x,na.rm = T))
power <- aggregate(data=tot, V2~V1, function(x) sum(x,na.rm = T))
plot(power$V1, power$V2)
plot(power$V1, power$V2, type="l")
power$V2/nsim
power    <- aggregate(data=tot, V2~V1, function(x) sum(x,na.rm = T))
power$V2 <- power$V2/nsim
plot(power$V1, power$V2, type="l")
power$V2<.8
[power$V2>0.8]
power$V2[power$V2>0.8]
power$V2[power$V2>0.8][1]
power$V2[power$V2>0.8]
power$V1[power$V2>0.8]
power$V1[power$V2>0.8][1]
glm_samp <- function(b0=3, b1=-0.02, minx=15, maxx=35, nmin=5, nmax=200, nstep=1, nsim=300, alpha=0.05){
n        <- seq(nmin, nmax, nstep)
err_list <- list()
for(j in n){
print(j)
pval     <- array(NA, dim=c(nsim, 2))
for(i in 1:nsim){
x        <- seq(15, 35, length.out=j)
y        <- rpois(length(x), exp(b0+b1*x))
pval[i,] <- c(j, ifelse(summary(mod <- glm(y~x, data=data.frame(x=x, y=y)))$coef[2,4]<alpha,1,0))
}
err_list[[j]] <- pval
}
tot <- do.call(rbind.data.frame, err_list)
tot <- na.omit(tot)
power    <- aggregate(data=tot, V2~V1, function(x) sum(x,na.rm = T))
power$V2 <- power$V2/nsim
return(power)}
yep <- glm_samp()
plot(yep$V1, yep$V2)
power$V1[power$V2>=0.8][1]
plot(yep$V1, yep$V2, type="l")
abline(v=power$V1[power$V2>=0.8][1], col="red", lty=2)
tot <- do.call(rbind.data.frame, err_list)
tot <- na.omit(tot)
power_df    <- aggregate(data=tot, V2~V1, function(x) sum(x,na.rm = T))
power_df$V2 <- power_df$V2/nsim
plot(power_df$V1, power_df$V2, type="l")
abline(v=power_df$V1[power_df$V2>=power][1], col="red", lty=2)
glm_samp <- function(b0=3, b1=-0.02, minx=15, maxx=35, nmin=5, nmax=200, nstep=1, nsim=300, alpha=0.05, power=0.8){
n        <- seq(nmin, nmax, nstep)
err_list <- list()
for(j in n){
print(j)
pval     <- array(NA, dim=c(nsim, 2))
for(i in 1:nsim){
x        <- seq(15, 35, length.out=j)
y        <- rpois(length(x), exp(b0+b1*x))
pval[i,] <- c(j, ifelse(summary(mod <- glm(y~x, data=data.frame(x=x, y=y)))$coef[2,4]<alpha,1,0))
}
err_list[[j]] <- pval
}
tot <- do.call(rbind.data.frame, err_list)
tot <- na.omit(tot)
power_df    <- aggregate(data=tot, V2~V1, function(x) sum(x,na.rm = T))
power_df$V2 <- power_df$V2/nsim
plot(power_df$V1, power_df$V2, type="l")
abline(v=power_df$V1[power_df$V2>=power][1], col="red", lty=2)
abline(h=power, col="red", lty=2)
return(power_df)}
yep <- glm_samp()
yep <- glm_samp(nstep=5)
glm_samp <- function(b0=3, b1=-0.02, minx=15, maxx=35, nmin=5, nmax=200, nstep=5, nsim=500, alpha=0.05, power=0.8){
n        <- seq(nmin, nmax, nstep)
err_list <- list()
for(j in n){
print(j)
pval     <- array(NA, dim=c(nsim, 2))
for(i in 1:nsim){
x        <- seq(15, 35, length.out=j)
y        <- rpois(length(x), exp(b0+b1*x))
pval[i,] <- c(j, ifelse(summary(mod <- glm(y~x, data=data.frame(x=x, y=y)))$coef[2,4]<alpha,1,0))
}
err_list[[j]] <- pval
}
tot <- do.call(rbind.data.frame, err_list)
tot <- na.omit(tot)
power_df    <- aggregate(data=tot, V2~V1, function(x) sum(x,na.rm = T))
power_df$V2 <- power_df$V2/nsim
plot(power_df$V1, power_df$V2, type="l", xlab="Sample size", ylab="Power = (1-beta)")
abline(v=power_df$V1[power_df$V2>=power][1], col="red", lty=2)
abline(h=power, col="red", lty=2)
return(power_df)}
yep <- glm_samp(nstep=5)
install.packages("simr")
